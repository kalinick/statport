{% extends 'SpFrontBundle::base.html.twig' %}

{% block content %}
    <a href="{{ path('reports_swimmers') }}">Back</a>
    <h1>{{ swimmer }}</h1>

    <div class="reports-wrapper">
        <div class="reports-titles">
            <ol>
                {% for key, title in reportsTitles %}
                    <li><a data-id="{{ key + 1 }}" href="#{{ key + 1 }}">{{ title }}</a></li>
                {% endfor %}
            </ol>
        </div>
        <div class="reports">
            <div class="report" data-id="1">
                {{ include('SpReportsBundle:Swimmer:reports/performance.html.twig', {'report': reports['performance']}) }}
            </div>
            <div class="report" data-id="2">
                {{ include('SpReportsBundle:Swimmer:reports/bestTime.html.twig', {'report': reports['bestTime']}) }}
            </div>
            <div class="report" data-id="3">
                {{ include('SpReportsBundle:Swimmer:reports/byMeet.html.twig', {'report': reports['byMeet']}) }}
            </div>
            <div class="report" data-id="4">
                {{ include('SpReportsBundle:Swimmer:reports/ranking.html.twig', {'report': reports['rank']}) }}
            </div>
            <div class="report" data-id="5">
                {{ include('SpReportsBundle:Swimmer:reports/historical.html.twig', {'report': reports['historical']}) }}
            </div>
            <div class="report" data-id="6">
                {{ include('SpReportsBundle:Swimmer:reports/timeDeficiency.html.twig', {'report': reports['timeDeficiency'], 'swimmer': swimmer}) }}
            </div>
            <div class="report" data-id="7">
                {{ include('SpReportsBundle:Swimmer:reports/withinTeam.html.twig', {'report': reports['withinTeam'], 'swimmer': swimmer}) }}
            </div>
            <div class="report" data-id="8">
                {#{{ include('SpReportsBundle:Swimmer:reports/withinTeamGraphic.html.twig', {'report': reports['withinTeamGraphic']}) }}#}
            </div>
            <div class="report" data-id="9">
                {#{{ include('SpReportsBundle:Swimmer:reports/withinRegionGraphic.html.twig', {'report': reports['withinRegionGraphic']}) }}#}
            </div>
            <div class="report" data-id="10">
                {#{{ include('SpReportsBundle:Swimmer:reports/swimmerToSwimmer.html.twig', {'swimmers': swimmers, 'events': events}) }}#}
            </div>
        </div>
        <div class="clear-both"></div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript" src="{{ asset('bundles/spfront/js/highcharts/highcharts.js') }}"></script>

    <script type="text/javascript">
        $(function() {
            showReport(window.location.hash.substring(1));

            $('.reports-titles li a').click(function(){
                showReport($(this).attr('href').substr(1));
            });

            $('.historical-graphic').each(function(){
                initHistoricalHighcharts(this);
            });

            $('.withing-team-graphic').each(function(){
                initWithingTeamHighcharts(this);
            });

            $('.withing-region-graphic').each(function(){
                initWithingTeamHighcharts(this);
            });

            $('.swimmer-to-swimmer select').change(swimmerToSwimmerChange);
        });

        function showReport(id)
        {
            $('.report').hide();
            $('.reports-titles a').removeClass('selected');
            id = (id == '') ? 1 : id;
            $('.reports [data-id="' + id + '"]').show();
            $('.reports-titles a[data-id="' + id + '"]').addClass('selected');
        }

        function initHistoricalHighcharts(target) {
            var subtitle = $(target).find('.params .subtitle').html();
            var dates = $.parseJSON($(target).find('.params .dates').html());
            var swimmerSeconds = $.parseJSON($(target).find('.params .swimmerSeconds').html());
            var timeStandartSeconds = $.parseJSON($(target).find('.params .timeStandartSeconds').html());
            $(target).find('.params').remove();

            var series = [{
                name: 'Your time',
                data: swimmerSeconds
            }];

            var name, visible = true;

            for(name in timeStandartSeconds) {
                series.push({
                    name: name,
                    data: timeStandartSeconds[name],
                    visible: visible
                });
                visible = false;
            }

            $(target).find('.image').highcharts({
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Historical Progression'
                },
                subtitle: {
                    text: subtitle
                },
                xAxis: {
                    categories: dates
                },
                yAxis: {
                    title: {
                        text: 'Time(sec)'
                    }
                },
                series: series
            });
        }

        function initWithingTeamHighcharts(target) {
            var subtitle = $(target).find('.params .subtitle').html();
            var meets = $.parseJSON($(target).find('.params .meets').html());
            var my = $.parseJSON($(target).find('.params .my').html());
            var avg = $.parseJSON($(target).find('.params .avg').html());

            $(target).find('.image').highcharts({
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Average Time Comparison By Event'
                },
                subtitle: {
                    text: subtitle
                },
                xAxis: {
                    categories: meets
                },
                yAxis: {
                    title: {
                        text: 'Time(sec)'
                    }
                },
                series: [{
                    name: 'Your time',
                    data: my
                }, {
                    name: 'Team avg time',
                    data: avg
                }]
            });
        }

        function initWithingRegionHighcharts(target) {
            var subtitle = $(target).find('.params .subtitle').html();
            var meets = $.parseJSON($(target).find('.params .meets').html());
            var my = $.parseJSON($(target).find('.params .my').html());
            var avg = $.parseJSON($(target).find('.params .avg').html());

            $(target).find('.image').highcharts({
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Average Time Comparison By Event'
                },
                subtitle: {
                    text: subtitle
                },
                xAxis: {
                    categories: meets
                },
                yAxis: {
                    title: {
                        text: 'Time(sec)'
                    }
                },
                series: [{
                    name: 'Your time',
                    data: my
                }, {
                    name: 'Team avg time',
                    data: avg
                }]
            });
        }

        function swimmerToSwimmerChange()
        {
            var reportBlock = $(this).closest('.swimmer-to-swimmer');
            var swimmer = reportBlock.find('#swimmer-list').val();
            var event = reportBlock.find('#event-list').val();

            if (swimmer != 0 && event != 0) {
                $.ajax({
                    type: "POST",
                    url: "{{ path('reports_compare_swimmer', {id : swimmer.id}) }}",
                    data: { swimmer: swimmer, event: event },
                    success: function(response){swimmerToSwimmerResponse(reportBlock, response)},
                    error: function(response){console.log(response);}
                })
            }
        }

        function swimmerToSwimmerResponse(block, response)
        {
            $(block).find('.graphic-swimmer-to-swimmer').highcharts({
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Swimmer to Swimmer Comparsion'
                },
                xAxis: {
                    categories: response.meet
                },
                yAxis: {
                    title: {
                        text: 'Time(sec)'
                    }
                },
                series: [{
                    name: response.myName,
                    data: response.me
                }, {
                    name: response.swimmerName,
                    data: response.swimmer
                }]
            });
        }

    </script>
{% endblock %}